version: '3.8'

services:
  music-rec-app:
    build:
      context: .
      dockerfile: Dockerfile.production
    ports:
      - "8501:8501"
    environment:
      - LASTFM_API_KEY=${LASTFM_API_KEY}
      - CYANITE_API_KEY=${CYANITE_API_KEY}
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}
      - LASTFM_USERNAME=${LASTFM_USERNAME}
      - DATABASE_URL=sqlite:///data/music_rec.db
    volumes:
      - music_data:/app/data
      - music_cache:/app/cache
      - music_models:/app/models
      - music_reports:/app/reports
      - music_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - music-rec-app
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_POLL_INTERVAL=300
      - WATCHTOWER_CLEANUP=true
    restart: unless-stopped

volumes:
  music_data:
    driver: local
  music_cache:
    driver: local
  music_models:
    driver: local
  music_reports:
    driver: local
  music_logs:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    driver: bridge